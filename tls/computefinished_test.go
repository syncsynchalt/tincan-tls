package tls

import (
	"testing"
)

// https://tools.ietf.org/html/draft-ietf-tls-tls13-vectors-07
func TestComputeFinished(t *testing.T) {
	conn := &TLSConn{}
	recs := generateTestRecords()
	conn.addToTranscript(recs["client_hello"])
	conn.addToTranscript(recs["server_hello"])

	clientPriv := hexBytes(`49 af 42 ba 7f 79 94 85 2d 71 3e f2 78
         4b cb ca a7 91 1d e2 6a dc 56 42 cb 63 45 40 e7 ea 50 05`)
	serverPub := hexBytes(`c9 82 88 76 11 20 95 fe 66 76 2b db f7 c6
         72 e1 56 d6 cc 25 3b 83 3d f1 dd 69 b1 b0 4e 75 1f 0f`)
	copy(conn.clientPrivKey[:], clientPriv)
	copy(conn.serverPubKey[:], serverPub)

	computeHandshakeKeys(conn)

	conn.addToTranscript(recs["server_encrypted_extensions"])
	conn.addToTranscript(recs["server_certificate"])
	conn.addToTranscript(recs["server_certificate_verify"])
	conn.addToTranscript(recs["server_finished"])

	expected := hexBytes(`9b 9b 14 1d 90 63 37 fb d2 cb dc e7 1d f4
         de da 4a b4 2c 30 95 72 cb 7f ff ee 54 54 b7 8f 07 18`)
	calculated := computeServerFinished(conn)
	equals(t, expected, calculated)
}

func TestIllustratedFinished(t *testing.T) {
	conn := &TLSConn{}
	clientHello := hexBytes(`010000c20303000102030405060708090a0b0c0d0e0f101112
131415161718191a1b1c1d1e1f20e0e1e2e3e4e5e6e7e8e9eaebecedeeef
f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff0006130113021303010000730000
001800160000136578616d706c652e756c666865696d2e6e6574000a0004
0002001d000d001400120403080404010503080505010806060102010033
00260024001d0020358072d6365880d1aeea329adf9121383851ed21a28e
3b75e965d0d2cd166254002d00020101002b0003020304`)
	serverHello := hexBytes(`020000760303707172737475767778797a7b7c7d7e7f808182
838485868788898a8b8c8d8e8f20e0e1e2e3e4e5e6e7e8e9eaebecedeeef
f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff130100002e00330024001d00209f
d7ad6dcff4298dd3f96d5b1b2af910a0535b1488d7f8fabb349a982880b6
15002b00020304`)
    conn.addToTranscript(clientHello)
    conn.addToTranscript(serverHello)

    clientPriv := hexBytes(`202122232425262728292a2b2c2d2e2f303132333435363738393a3b3c3d3e3f`)
    serverPub := hexBytes(`9fd7ad6dcff4298dd3f96d5b1b2af910a0535b1488d7f8fabb349a982880b615`)
    copy(conn.clientPrivKey[:], clientPriv)
    copy(conn.serverPubKey[:], serverPub)

	computeHandshakeKeys(conn)

conn.addToTranscript(hexBytes(`080000020000`))
conn.addToTranscript(hexBytes(`0b00032e0000032a0003253082032130820209a0030201020208155a92adc2048f90300d06092a864886f70d01010b05003022310b300906035504061302555331133011060355040a130a4578616d706c65204341301e170d3138313030353031333831375a170d3139313030353031333831375a302b310b3009060355040613025553311c301a060355040313136578616d706c652e756c666865696d2e6e657430820122300d06092a864886f70d01010105000382010f003082010a0282010100c4803606bae7476b089404eca7b691043ff792bc19eefb7d74d7a80d001e7b4b3a4ae60fe8c071fc73e7024c0dbcf4bdd11d396bba70464a13e94af83df3e10959547bc955fb412da3765211e1f3dc776caa53376eca3aecbec3aab73b31d56cb6529c8098bcc9e02818e20bf7f8a03afd1704509ece79bd9f39f1ea69ec47972e830fb5ca95de95a1e60422d5eebe527954a1e7bf8a86f6466d0d9f16951a4cf7a04692595c1352f2549e5afb4ebfd77a37950144e4c026874c653e407d7d23074401f484ffd08f7a1fa05210d1f4f0d5ce79702932e2cabe701fdfad6b4bb71101f44bad666a11130fe2ee829e4d029dc91cdd6716dbb9061886edc1ba94210203010001a3523050300e0603551d0f0101ff0404030205a0301d0603551d250416301406082b0601050507030206082b06010505070301301f0603551d23041830168014894fde5bcc69e252cf3ea300dfb197b81de1c146300d06092a864886f70d01010b05000382010100591645a69a2e3779e4f6dd271aba1c0bfd6cd75599b5e7c36e533eff3659084324c9e7a504079d39e0d42987ffe3ebdd09c1cf1d914455870b571dd19bdf1d24f8bb9a11fe80fd592ba0398cde11e2651e618ce598fa96e5372eef3d248afde17463ebbfabb8e4d1ab502a54ec0064e92f7819660d3f27cf209e667fce5ae2e4ac99c7c93818f8b2510722dfed97f32e3e9349d4c66c9ea6396d744462a06b42c6d5ba688eac3a017bddfc8e2cfcad27cb69d3ccdca280414465d3ae348ce0f34ab2fb9c618371312b191041641c237f11a5d65c844f0404849938712b959ed685bc5c5dd645ed19909473402926dcb40e3469a15941e8e2cca84bb6084636a00000`))
conn.addToTranscript(hexBytes(`0f000104080401002cf8ece7242804934b58ef48794c252bd34ad10aedfff930ca05a3169a5917668f399d43fcdbaf2b1c174d52d725174db9c754c79b63303be72de1837f682f6a94d355de74c3d04d6d612414c9b5ec285761271c68f5ce66b7c2fb6536199826fc41fe6123fc8006b425fd4b03a3421e91fb4b63f7a314e19517b7f17456f56667b5ba81d759d35d21f0ed7614a89899979e992f37abd7f2250c7ddd453bf812b6fe99ff18aaac8680785532d7cd27fded167fc89abd44ece78d1a69ec71370f0a32b0b97a6c224ee9d6a5eb263651421dbddd5391c85b3e9b664235797c0c31820e3e675aa2469a98287c5e4fcd80bed5547aaf8a80b80cfc11dba1b43a4ac2`))
conn.addToTranscript(hexBytes(`14000020a2b22c83f1b01637d57bfa853d61a27057fddeebf975ec0367b93682c80eda14`))

	expected := hexBytes(`0db5e06f69d73436d047561acd8f9f60a6fe93e7ec6f6125faa1598fd28170ec`)

	_ = computeServerFinished(conn)
	calculated := computeClientFinished(conn)
	equals(t, expected, calculated)
}
